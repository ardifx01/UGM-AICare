name: Deploy to VM

on:
  push:
    branches:
      - main # Or your primary deployment branch (e.g., master, prod)
  # You can also trigger on merged pull requests to main:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  deploy:
    name: Deploy Application to VM
    runs-on: ubuntu-latest
    # Condition to run only if it's a push to main, or a PR to main that was merged
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VM via SSH
        uses: appleboy/ssh-action@v1.0.3 # Or latest stable version
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          port: 22 # Default SSH port, change if your VM uses a different one
          script: |
            set -e # Exit immediately if a command exits with a non-zero status

            echo "==> Navigating to project directory: ${{ secrets.VM_PROJECT_PATH }}"
            cd ${{ secrets.VM_PROJECT_PATH }}

            echo "==> Creating/Updating .env file from GitHub Secret"
            echo "${{ secrets.ENV_FILE_PRODUCTION }}" > .env
            chmod 600 .env # Restrict permissions for the .env file

            echo "==> Ensuring current branch is main and pulling latest changes"
            git checkout main
            git fetch origin main # Fetch latest changes from remote main
            git reset --hard origin/main # Force local main to match remote main

            echo "==> Stopping existing services (if any)"
            docker-compose -f docker-compose.yml down || echo "No services were running or 'down' command failed (continuing)."

            echo "==> Building Docker images (this might take a while)..."
            # Consider removing --no-cache for faster subsequent builds if your Dockerfiles are optimized
            # and dependencies don't change often.
            docker-compose -f docker-compose.yml build --no-cache

            echo "==> Starting new application containers in detached mode"
            docker-compose -f docker-compose.yml up -d

            echo "==> Pruning unused Docker images and volumes to save space"
            docker image prune -af || echo "Image prune failed or no images to prune."
            docker volume prune -f || echo "Volume prune failed or no volumes to prune."

            echo "==> Deployment to VM completed successfully!"