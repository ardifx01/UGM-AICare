{
  "project": {
    "name": "UGM-AICare",
    "version": "1.0.0",
    "description": "AI-powered mental health support platform for university students",
    "primary_users": ["UGM Students", "University Staff (Admins)", "Mental Health Professionals"]
  },
  "architecture": {
    "type": "Microservices with Monorepo Structure",
    "deployment": "Docker Compose + Cloud Services",
    "components": {
      "frontend": {
        "technology": "Next.js 15.3 with TypeScript",
        "framework": "React 19 with App Router",
        "styling": "Tailwind CSS 4",
        "authentication": "NextAuth.js v5",
        "state_management": "React Context + Hooks",
        "ui_library": "Custom components with Framer Motion"
      },
      "backend": {
        "technology": "FastAPI (Python 3.11)",
        "database": "PostgreSQL 16",
        "cache": "Redis 7",
        "orm": "SQLAlchemy 2.0",
        "task_queue": "APScheduler"
      },
      "ai_services": {
        "llm_providers": [
          {
            "name": "Self-Hosted Gemma",
            "endpoint": "https://ina17.com/api/gemma",
            "model": "gemma-2b",
            "use_case": "Cost-effective responses, summaries"
          },
          {
            "name": "Google Gemini 2.0 Flash",
            "endpoint": "Google AI API",
            "model": "gemini-2.0-flash-latest",
            "use_case": "Complex therapeutic conversations"
          }
        ],
        "agent_framework": {
          "orchestration": "N8N (Self-hosted on INA17)",
          
          "memory": "Redis-backed conversation memory"
        }
      },
      "blockchain": {
        "network": "EDUChain Testnet",
        "contract_type": "ERC1155",
        "purpose": "Achievement NFT badges"
      }
    }
  },
  "user_flows": {
    "student": {
      "features": [
        "AI Chatbot (Aika)",
        "Journaling",
        "Activity Tracking",
        "NFT Badges",
        "Mental Health Resources",
        "Appointment Booking",
        "Profile Management"
      ],
      "authentication": "Google OAuth (UGM domain)",
      "data_access": "Own data only"
    },
    "admin": {
      "features": [
        "Analytics Dashboard",
        "User Management",
        "Content Moderation",
        "System Health Monitoring",
        "Therapeutic Module Management",
        "Report Generation",
        "Intervention Alerts"
      ],
      "authentication": "Credentials-based login",
      "data_access": "Aggregated and individual user data"
    }
  },
  "data_flow": {
    "chat_pipeline": [
      "User Input → Frontend Validation",
      "API Request → Backend Authentication",
      "Context Retrieval → Redis Memory",
      "CBT Module Check → Therapeutic Logic",
      "LLM Selection → Gemma/Gemini Router",
      "Response Generation → Streaming/Chunked",
      "Activity Tracking → Database Update",
      "Badge Check → Achievement System"
    ],
    "admin_analytics": [
      "Data Collection → PostgreSQL",
      "Aggregation → Scheduled Jobs",
      "Visualization → Frontend Charts",
      "Export → CSV/PDF Reports"
    ]
  },
  "integration_points": {
    "n8n_workflows": {
      "endpoint": "https://ina17.com/n8n-webhook",
      "triggers": [
        "User inactivity (3+ days)",
        "Crisis keywords detected",
        "Achievement milestones",
        "Appointment reminders"
      ],
      "actions": [
        "Send email notifications",
        "Alert mental health staff",
        "Generate weekly reports",
        "Sync with external systems"
      ]
    }
    
  },
  "security": {
    "authentication": {
      "students": "OAuth 2.0 with Google",
      "admins": "Username/Password + 2FA (planned)",
      "api": "Internal API keys for service communication"
    },
    "data_protection": {
      "encryption": "TLS 1.3 in transit, AES-256 at rest",
      "pii_handling": "Hashed identifiers, encrypted sensitive fields",
      "compliance": "GDPR-ready architecture"
    }
  },
  "deployment": {
    "environments": {
      "development": "Local Docker Compose",
      "staging": "INA17 VPS",
      "production": "Cloud + INA17 hybrid"
    },
    "services": {
      "frontend": "Port 4000",
      "backend": "Port 8000",
      "database": "Port 5432",
      "redis": "Port 6379",
      "n8n": "Port 5678"
    }
  }
}